import pygame as pg
import time
import random as ran 
import threading
import math

#********************************************************************************************
#                                     VARIABLES GLOBALES
#********************************************************************************************

SCREEN_SIZE_X = 500
SCREEN_SIZE_Y = 700
ANCHO_BARRA = 60
ANCHO_BLOQUE = 50
RADIO_ESFERA = 15
EN_JUEGO = False
DEG2RAD = math.pi/180
RAD2DEG = 180/math.pi
coord_barra_x = 0
coord_esfera = [0,0,0]
lista_bloques = []

colores = [
    (0,0,0),
    (150,150,150),
    (50,120,255),
    (50,255,255),
    (170,50,255),
    (50,255,130),
    (255,255,50),
    (255,100,50)
]

bloques=[
    [[50,200,ANCHO_BLOQUE,20],True],
    [[100,200,ANCHO_BLOQUE,20],True],
    [[150,200,ANCHO_BLOQUE,20],True],
    [[200,200,ANCHO_BLOQUE,20],True],
    [[250,200,ANCHO_BLOQUE,20],True],
    [[300,200,ANCHO_BLOQUE,20],True],
    [[350,200,ANCHO_BLOQUE,20],True],
    [[400,200,ANCHO_BLOQUE,20],True],
]



#********************************************************************************************
#                                        FUNCIONES 
#********************************************************************************************

def barra(x = 0):
    pg.draw.rect(screen,(0,0,0),[x,SCREEN_SIZE_Y-10,ANCHO_BARRA,10])

def esfera(x,y):
    pg.draw.circle(screen, (0,0,0), (int(x),int(y)), RADIO_ESFERA)

def ladrillos():
    global lista_bloques
    global EN_JUEGO
    win = True
    for i in range(0,8):
        if(bloques[i][1]):
            win = False
            pg.draw.rect(screen, colores[i], bloques[i][0])
    if(win):
        textsurface = myfont.render('Has Ganado!', False, (0, 0, 0))
        screen.blit(textsurface,(150,300))
        EN_JUEGO = False

def centrar_esfera():
    coord_esfera[0] = int(SCREEN_SIZE_X/2)
    coord_esfera[1] = SCREEN_SIZE_Y-10-RADIO_ESFERA
    coord_esfera[2] = (180+ran.randint(45,135))*DEG2RAD

def tarea_esfera():
    global EN_JUEGO
    global coord_esfera
    global coord_barra_x
    global bloques
    centrar_esfera()
    pared = 0
    print("Angulo: "+str(coord_esfera[2]*RAD2DEG))
    while True:
        if EN_JUEGO:
            coord_esfera[0] += 15*math.cos(coord_esfera[2])
            coord_esfera[1] += 15*math.sin(coord_esfera[2])

            if(coord_esfera[1] > 200 and coord_esfera[1] <= 220+RADIO_ESFERA):
                for i in range(0,8):
                    if(bloques[i][1]):
                        if (coord_esfera[0] > bloques[i][0][0]-RADIO_ESFERA and coord_esfera[0] < bloques[i][0][0]+ANCHO_BLOQUE+RADIO_ESFERA):
                            if (pared != 5):
                                if(coord_esfera[2] < 270*DEG2RAD):
                                    coord_esfera[2] -= 90*DEG2RAD
                                else:
                                    coord_esfera[2] -= 270*DEG2RAD
                                bloques[i][1]=False;
                                pg.mixer.music.load('explosion.mp3')
                                pg.mixer.music.play(0)
                                print("Angulo bloques: "+str(coord_esfera[2]*RAD2DEG))     
                            pared = 5

            if (coord_esfera[0] <= RADIO_ESFERA):
                if(pared != 1):
                    if (coord_esfera[2] > 180*DEG2RAD):
                        coord_esfera[2] += 90*DEG2RAD
                    else:
                        coord_esfera[2] -= 90*DEG2RAD
                    print("Angulo +90: "+str(coord_esfera[2]*RAD2DEG))
                    pg.mixer.music.load('metal_hit.wav')
                    pg.mixer.music.play(0)
                pared = 1
            if (coord_esfera[0] >= SCREEN_SIZE_X-RADIO_ESFERA):
                if(pared != 2):
                    if (coord_esfera[2] > 270*DEG2RAD):
                        coord_esfera[2] -= 90*DEG2RAD
                    else:
                        coord_esfera[2] += 90*DEG2RAD
                    print("Angulo -90: "+str(coord_esfera[2]*RAD2DEG))
                    pg.mixer.music.load('metal_hit.wav')
                    pg.mixer.music.play(0)
                pared = 2
            if (coord_esfera[1] <= RADIO_ESFERA):
                if (pared != 3):
                    if(coord_esfera[2] < 270*DEG2RAD):
                        coord_esfera[2] -= 90*DEG2RAD
                    else:
                        coord_esfera[2] -= 270*DEG2RAD

                    print("Angulo techo: "+str(coord_esfera[2]*RAD2DEG))  
                    pg.mixer.music.load('metal_hit.wav')
                    pg.mixer.music.play(0)   
                pared = 3
            if (coord_esfera[1] >= SCREEN_SIZE_Y-10-RADIO_ESFERA):
                if(pared != 4):
                    if(coord_esfera[0] < coord_barra_x or coord_esfera[0] > (coord_barra_x + ANCHO_BARRA)):
                        centrar_esfera()
                        EN_JUEGO = False
                    if(coord_esfera[0] < (coord_barra_x + ANCHO_BARRA/6)):
                        coord_esfera[2] += 20*DEG2RAD  
                    if(coord_esfera[0] < (coord_barra_x + ANCHO_BARRA*2/6)):
                        coord_esfera[2] += 10*DEG2RAD 
                    if(coord_esfera[0] < (coord_barra_x + ANCHO_BARRA*4/6)):
                        coord_esfera[2] -= 10*DEG2RAD 
                    if(coord_esfera[0] > coord_barra_x + ANCHO_BARRA*5/6):
                        coord_esfera[2] -= 20*DEG2RAD          
                    tecla = pg.key.get_pressed()
                    if tecla[pg.K_LEFT]:
                        coord_esfera[2] -= 40*DEG2RAD 
                    if tecla[pg.K_RIGHT]:
                        coord_esfera[2] += 40*DEG2RAD 

                    if(coord_esfera[2] < 90*DEG2RAD):
                        coord_esfera[2] += 270*DEG2RAD
                    else:
                        coord_esfera[2] += 90*DEG2RAD
                    print("Angulo piso: "+str(coord_esfera[2]*RAD2DEG))   
                    pg.mixer.music.load('metal_hit.wav')
                    pg.mixer.music.play(0)    
                pared = 4
                    

            if(coord_esfera[0]<0 or coord_esfera[0]>SCREEN_SIZE_X or coord_esfera[1]<0 or coord_esfera[1]>SCREEN_SIZE_Y):
                    centrar_esfera()
                    EN_JUEGO = False
            time.sleep(0.04)

def tarea_barra():
    global coord_barra_x
    global coord_esfera
    global EN_JUEGO
    coord_barra_x = (SCREEN_SIZE_X - ANCHO_BARRA)/2
    while True:
        tecla = pg.key.get_pressed()
        if tecla[pg.K_LEFT]:
            coord_barra_x -= 10
            time.sleep(0.01)
        if tecla[pg.K_RIGHT]:
            coord_barra_x += 10  
            time.sleep(0.01)
        if(coord_barra_x < 0):
            coord_barra_x = 0
        if(coord_barra_x > SCREEN_SIZE_X - ANCHO_BARRA):
            coord_barra_x = SCREEN_SIZE_X - ANCHO_BARRA  

#********************************************************************************************
#                                   EJECUCIÃ“N DE TAREAS
#********************************************************************************************

pg.init() #inicia libreria pygame
screen =  pg.display.set_mode((SCREEN_SIZE_X,SCREEN_SIZE_Y))
screen.fill((255,255,255))
myfont = pg.font.SysFont('comicsansms', 30)
pg.display.update()

task_barra = threading.Thread(target=tarea_barra)
task_esfera = threading.Thread(target=tarea_esfera)
task_barra.daemon = True
task_esfera.daemon = True
task_barra.start()
task_esfera.start()



Terminado = False
while not Terminado:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            Terminado = True  
        if event.type == pg.KEYDOWN:
            if event.key == pg.K_SPACE:
                EN_JUEGO = True
    screen.fill((255,255,255))
    ladrillos()
    barra(coord_barra_x)    
    esfera(coord_esfera[0], coord_esfera[1])          
    pg.display.update()  
